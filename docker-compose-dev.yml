services:
  adminer:
    depends_on:
      postgres:
        condition: service_healthy
    image: adminer
    restart: always
    ports:
      - 8080:8080

  postgres:
    image: postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: dev
    ports:
      - 5432:5432
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 3s
      retries: 5

  frontend:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./frontend
      dockerfile: Dockerfile.dev
    ports:
      - 5173:5173
    env_file:
      - ./frontend/.env.dev
    develop:
      watch:
        - action: sync+restart
          path: ./frontend
          target: /usr/frontend/dev
          ignore:
            - node_modules/
            - .git/

  backend:
    depends_on:
      postgres:
        condition: service_healthy
    build:
      context: ./backend
      dockerfile: Dockerfile.dev
    ports:
      - 3000:3000
    env_file:
      - ./backend/.env.dev
    develop:
      watch:
        - action: sync+restart
          path: ./backend
          target: /usr/backend/dev
          ignore:
            - node_modules/
            - .git/

volumes:
  pgdata:
